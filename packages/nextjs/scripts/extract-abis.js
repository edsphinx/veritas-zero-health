#!/usr/bin/env node

/**
 * Extract ABIs from Foundry compiled artifacts
 *
 * Reads compiled contract JSONs from foundry/out and extracts ABIs
 * for use in the VZH library
 */

const fs = require('fs');
const path = require('path');

const FOUNDRY_OUT = path.resolve(__dirname, '../../../foundry/out');
const OUTPUT_FILE = path.resolve(__dirname, '../shared/lib/vzh/generated-abis.ts');

// Contracts we want to extract ABIs for
const CONTRACTS = [
  { name: 'StudyRegistryImpl', file: 'StudyRegistryImpl.sol/StudyRegistryImpl.json' },
  { name: 'AgeVerifier', file: 'AgeVerifier.sol/AgeVerifier.json' },
  { name: 'StudyParticipationSBT', file: 'StudyParticipationSBT.sol/ProofOfMatch.json' },
  { name: 'StudyEnrollmentData', file: 'StudyEnrollmentData.sol/MatchData.json' },
  { name: 'CommitmentVault', file: 'CommitmentVault.sol/CommitmentVault.json' },
  { name: 'CommitmentVaultFactory', file: 'CommitmentVaultFactory.sol/CommitmentVaultFactory.json' },
  { name: 'TrialAccessNFT', file: 'TrialAccessNFT.sol/ExperienceNFT.json' },
  { name: 'ComplianceScore', file: 'ComplianceScore.sol/ComplianceScore.json' },
  { name: 'EligibilityCodeVerifier', file: 'EligibilityCodeVerifier.sol/Groth16Verifier.json' },
];

function extractABIs() {
  const abis = {};

  console.log('Extracting ABIs from Foundry artifacts...\n');

  for (const contract of CONTRACTS) {
    const filePath = path.join(FOUNDRY_OUT, contract.file);

    try {
      if (!fs.existsSync(filePath)) {
        console.warn(`⚠️  Warning: ${contract.name} not found at ${filePath}`);
        continue;
      }

      const artifact = JSON.parse(fs.readFileSync(filePath, 'utf8'));
      abis[contract.name] = artifact.abi;

      console.log(`✅ Extracted ABI for ${contract.name}`);
      console.log(`   - ${artifact.abi.length} entries`);

      // Count function types
      const functions = artifact.abi.filter(item => item.type === 'function');
      const events = artifact.abi.filter(item => item.type === 'event');
      const errors = artifact.abi.filter(item => item.type === 'error');

      console.log(`   - ${functions.length} functions, ${events.length} events, ${errors.length} errors\n`);

    } catch (error) {
      console.error(`❌ Error extracting ${contract.name}:`, error.message);
    }
  }

  // Generate TypeScript file
  const tsContent = `/**
 * Generated ABIs from Foundry Artifacts
 *
 * Auto-generated by scripts/extract-abis.js
 * DO NOT EDIT MANUALLY
 *
 * To regenerate: yarn extract-abis
 */

export const GENERATED_ABIS = ${JSON.stringify(abis, null, 2)} as const;

export type ContractName = ${CONTRACTS.map(c => `'${c.name}'`).join(' | ')};
`;

  fs.writeFileSync(OUTPUT_FILE, tsContent);

  console.log(`\n✅ ABIs written to ${OUTPUT_FILE}`);
  console.log(`\nTotal contracts: ${Object.keys(abis).length}`);
}

// Run extraction
extractABIs();
