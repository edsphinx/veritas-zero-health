{
  "name": "@veritas/zk",
  "version": "0.1.0",
  "description": "Zero-Knowledge proof circuits and verification for Veritas clinical trials",
  "private": true,
  "scripts": {
    "//========================================": "===========================================",
    "//== HALO2/MOPRO CIRCUITS (Age Range) ===": "== Fast browser proofs (33-60ms) ========",
    "halo2:test": "cd circuits && cargo test --all",
    "halo2:test:age": "cd circuits/circuits/composite && cargo test",
    "halo2:build": "cd circuits && cargo build --release",
    "halo2:keys:generate": "cd circuits/plonk-wrappers/plonk-composite && cargo run --release --bin gen-plonk-keys -- ../../../../browser-extension/public/zk/plonk_clinical_trials_srs.bin",
    "halo2:keys:check": "ls -lh circuits/plonk-wrappers/plonk-composite/out/",
    "//== WASM Compilation (Mopro) ===========": "===========================================",
    "wasm:build": "cd mopro/mopro-wasm && wasm-pack build --target web --release --features eligibility",
    "wasm:build:dev": "cd mopro/mopro-wasm && wasm-pack build --target web --dev --features eligibility",
    "wasm:sync": "cd ../browser-extension && ./sync-zk-files.sh",
    "wasm:build:sync": "pnpm wasm:build && pnpm wasm:sync",
    "//== Complete Halo2 Pipeline =============": "===========================================",
    "halo2:pipeline": "pnpm halo2:test && pnpm halo2:keys:generate && pnpm wasm:build:sync",
    "halo2:quick": "pnpm wasm:build:sync",
    "//== CIRCOM CIRCUITS (Medical Data) =====": "== On-chain verification (Groth16) ======",
    "//== Circuit Compilation =================": "===========================================",
    "circom:compile:eligibility": "circom archived/circom/circuits/eligibility_code.circom --r1cs --wasm --sym --output archived/circom/build",
    "circom:compile:all": "npm run circom:compile:eligibility",
    "//== Powers of Tau (Trusted Setup) =======": "===========================================",
    "circom:ptau:download": "echo 'Downloading Powers of Tau...' && curl -o archived/circom/setup/powersOfTau28_hez_final_12.ptau https://hermez.s3-eu-west-1.amazonaws.com/powersOfTau28_hez_final_12.ptau",
    "circom:ptau:new": "snarkjs powersoftau new bn128 12 archived/circom/setup/pot12_0000.ptau -v",
    "circom:ptau:contribute": "snarkjs powersoftau contribute archived/circom/setup/pot12_0000.ptau archived/circom/setup/pot12_0001.ptau --name='First contribution' -v",
    "circom:ptau:prepare": "snarkjs powersoftau prepare phase2 archived/circom/setup/pot12_0001.ptau archived/circom/setup/pot12_final.ptau -v",
    "circom:ptau:setup": "pnpm circom:ptau:new && pnpm circom:ptau:contribute && pnpm circom:ptau:prepare",
    "//== Groth16 Setup (Circuit-specific) ====": "===========================================",
    "circom:setup:eligibility": "snarkjs groth16 setup archived/circom/build/eligibility_code.r1cs archived/circom/setup/pot12_final.ptau archived/circom/setup/eligibility_0000.zkey",
    "circom:setup:all": "pnpm circom:setup:eligibility",
    "//== Export Verification Keys ============": "===========================================",
    "circom:export:vkey:eligibility": "snarkjs zkey export verificationkey archived/circom/setup/eligibility_0000.zkey archived/circom/setup/verification_key.json",
    "circom:export:vkey:all": "pnpm circom:export:vkey:eligibility",
    "//== Generate Solidity Verifiers =========": "===========================================",
    "circom:verifier:eligibility": "snarkjs zkey export solidityverifier archived/circom/setup/eligibility_0000.zkey ../foundry/contracts/zk/EligibilityCodeVerifier.sol",
    "circom:verifier:all": "pnpm circom:verifier:eligibility",
    "//== Test Proof Generation ===============": "===========================================",
    "circom:test:eligibility": "node archived/circom/generate_test_proof.js",
    "circom:test:all": "pnpm circom:test:eligibility",
    "//== Complete Circom Pipeline ============": "===========================================",
    "circom:pipeline:full": "pnpm circom:compile:all && pnpm circom:ptau:setup && pnpm circom:setup:all && pnpm circom:export:vkey:all && pnpm circom:verifier:all && pnpm circom:test:all",
    "circom:pipeline:quick": "pnpm circom:compile:all && pnpm circom:setup:all && pnpm circom:export:vkey:all && pnpm circom:verifier:all",
    "circom:pipeline:verifier": "pnpm circom:verifier:all && echo '✅ Verifier generated at ../foundry/contracts/zk/'",
    "//== DEPLOYMENT & TESTING ================": "===========================================",
    "//== Foundry Integration =================": "===========================================",
    "foundry:test:verifier": "cd ../foundry && forge build contracts/zk/EligibilityCodeVerifier.sol",
    "foundry:test:all": "cd ../foundry && forge test",
    "foundry:deploy:local": "cd ../foundry && forge script script/DeployVeritasSystem.s.sol --rpc-url http://localhost:8545 --broadcast",
    "foundry:deploy:sepolia": "cd ../foundry && forge script script/DeployVeritasSystem.s.sol --rpc-url $OPTIMISM_SEPOLIA_RPC --broadcast --verify",
    "//== End-to-End Testing ==================": "===========================================",
    "test:halo2": "pnpm halo2:test",
    "test:circom": "pnpm circom:test:all",
    "test:foundry": "pnpm foundry:test:all",
    "test:all": "pnpm test:halo2 && pnpm test:circom && pnpm test:foundry",
    "//== UTILITY SCRIPTS =====================": "===========================================",
    "clean:halo2": "cd circuits && cargo clean && rm -rf plonk-wrappers/plonk-composite/out/*",
    "clean:circom": "rm -rf archived/circom/build/* archived/circom/setup/*.ptau archived/circom/setup/*.zkey",
    "clean:wasm": "rm -rf mopro/mopro-wasm/pkg/*",
    "clean:all": "pnpm clean:halo2 && pnpm clean:circom && pnpm clean:wasm",
    "info:halo2": "echo '🔐 Halo2/Mopro (Age Range)' && echo '  - Proof time: 33-60ms' && echo '  - Verification: WASM only' && echo '  - Keys: circuits/plonk-wrappers/plonk-composite/out/'",
    "info:circom": "echo '🔐 Circom/Groth16 (Medical Data)' && echo '  - Proof time: 2-5s' && echo '  - Verification: On-chain (Solidity)' && echo '  - Keys: archived/circom/setup/'",
    "info:all": "pnpm info:halo2 && echo '' && pnpm info:circom",
    "check:deps": "which circom && which snarkjs && which cargo && which wasm-pack",
    "check:keys:halo2": "ls -lh circuits/plonk-wrappers/plonk-composite/out/",
    "check:keys:circom": "ls -lh archived/circom/setup/*.zkey archived/circom/setup/*.ptau 2>/dev/null || echo 'No Circom keys found. Run: pnpm circom:pipeline:quick'",
    "check:keys:all": "pnpm check:keys:halo2 && pnpm check:keys:circom",
    "//== QUICK START COMMANDS ================": "===========================================",
    "build": "pnpm halo2:build && pnpm circom:compile:all",
    "rebuild": "pnpm clean:all && pnpm build",
    "generate:all": "pnpm halo2:pipeline && pnpm circom:pipeline:verifier",
    "deploy": "pnpm foundry:deploy:sepolia",
    "start": "echo 'ZK Circuits ready. Use: pnpm info:all'",
    "//== DEVELOPMENT WORKFLOW ================": "===========================================",
    "dev:halo2": "pnpm halo2:test && pnpm wasm:build:sync",
    "dev:circom": "pnpm circom:compile:all && pnpm circom:verifier:all && pnpm foundry:test:verifier",
    "dev:watch": "echo 'Use cargo watch in circuits/ or nodemon for circom compilation'",
    "//== PRE-COMMIT HOOKS ====================": "===========================================",
    "precommit": "pnpm test:all",
    "prepush": "pnpm test:all && pnpm foundry:test:verifier"
  },
  "dependencies": {
    "circomlibjs": "^0.1.7",
    "snarkjs": "^0.7.4"
  },
  "devDependencies": {
    "@types/node": "^20.0.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "pnpm": ">=8.0.0"
  },
  "packageManager": "pnpm@9.0.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/veritas-zero-health"
  },
  "keywords": [
    "zero-knowledge",
    "zk-proofs",
    "halo2",
    "circom",
    "groth16",
    "clinical-trials",
    "privacy",
    "blockchain"
  ],
  "author": "Veritas Team",
  "license": "MIT"
}
